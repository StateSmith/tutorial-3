@startuml LightSm
scale 1.25

' //////////////////////// STATE ORGANIZATION ///////////////////////
' Note: StateSmith treats state names and events as case insensitive.
' More info: https://github.com/StateSmith/StateSmith/wiki/PlantUML

state OFF
state ON_GROUP {
    state ON1
    state ON2
    state ON_HOT
}

[*] -> OFF

' ///////////////////////// STATE HANDLERS /////////////////////////
' Syntax: https://github.com/StateSmith/StateSmith/wiki/Behaviors

OFF: enter / console.log("Light is: OFF");
OFF --> ON1: INC

ON_GROUP --> OFF : OFF

ON1: enter / this.lightBlue();
ON1 --> ON2: INC
ON1 --> OFF: DIM

ON2: enter / this.lightYellow();
ON2: enter / count = 0;
ON2: 1. INC / count++;
ON2: 2. INC / console.log("count var: " + count);
ON2 --> ON_HOT: INC [count >= 3]
ON2 --> ON1: DIM

ON_HOT: enter / this.lightRed();
ON_HOT --> ON2: DIM


' //////////////////////// StateSmith config ////////////////////////
' The below special comment block sets the StateSmith configuration.
' More info: https://github.com/StateSmith/StateSmith/issues/335

/'! $CONFIG : toml
SmRunnerSettings.transpilerId = "JavaScript"

[RenderConfig]
AutoExpandedVars = """
    count : 0, // variable for state machine
    """
# You could also put the variable in the base class instead.
FileTop = """
    "use strict";    
    // any text you put in IRenderConfig.FileTop (like this comment) will be written to the generated .h file
    import { LightSmBase } from "./LightSmBase.js";
    """

[RenderConfig.JavaScript]
ExtendsSuperClass = "LightSmBase"
UseExportOnClass = true

'/
@enduml
